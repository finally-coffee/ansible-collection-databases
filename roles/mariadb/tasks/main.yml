---
- name: Ensure mariadb state parameter is valid
  ansible.builtin.fail:
    msg: >-2
      Unknown state '{{ mariadb_state }}'!
      Supported states are {{ mariadb_states | join(', ') }}
  when: mariadb_state not in mariadb_states

- name: Ensure deployment method is valid
  ansible.builtin.fail:
    msg: >-2
      Unknown deployment method '{{ mariadb_deployment_method }}'!
      Supported deployment methods are {{ mariadb_deployment_methods | join(', ') }}
  when: mariadb_deployment_method not in mariadb_deployment_methods

- name: Ensure mariadb container image '{{ mariadb_container_image }}' is {{ mariadb_state }}
  community.docker.docker_image:
    name: "{{ mariadb_container_image }}"
    state: "{{ mariadb_state }}"
    source: "{{ mariadb_container_image_source }}"
    force_source: "{{ mariadb_container_image_force_source }}"

- name: Ensure mariadb container '{{ mariadb_container_name }}' is {{ mariadb_container_state }}
  community.docker.docker_container:
    name: "{{ mariadb_container_name }}"
    image: "{{ mariadb_container_image }}"
    env: "{{ mariadb_container_environment }}"
    ports: "{{ mariadb_container_ports | default(omit, true) }}"
    labels: "{{ mariadb_container_labels | default(omit, true) }}"
    volumes: "{{ mariadb_container_volumes }}"
    networks: "{{ mariadb_container_networks | default(omit, true) }}"
    etc_hosts: "{{ mariadb_container_etc_hosts | default(omit, true) }}"
    restart_policy: "{{ mariadb_container_restart_policy }}"
    state: "{{ mariadb_container_state }}"
